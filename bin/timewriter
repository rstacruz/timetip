#!/usr/bin/env node
// vim:ft=javascript

var cli = require('commander');
var extend = require('util')._extend;

cli
  .version(require('../package').version)
  .option('-f, --file <path>', 'the data file [~/.timelogs]', '~/.timelogs')
  .on('--help', function() {
    console.log('  Usage:');
    console.log('');
    console.log('    '+cli._name+' <project> [<task>]   # start working');
    console.log('    '+cli._name+' stop [<reason>]      # stop working');
    console.log('    '+cli._name+' <date>               # show entries');
    console.log('');
    console.log('  Examples:');
    console.log('');
    console.log('    '+cli._name+' myproject            # start working on "myproject"');
    console.log('    '+cli._name+' stop                 # stop tracking');
    console.log('    '+cli._name+' stop lunch break     # stop tracking and log the reason');
    console.log('    '+cli._name+' 2 days ago           # show entries from 2 days ago');
  })
  .parse(process.argv);


if (cli.args.length === 0) {
  cli.outputHelp();
  process.exit(26);
}

var DateParser = require('../lib/date_parser');
var SpecParser = require('../lib/spec_parser');
var TimeLog = require('../lib/time_log');

var args = cli.args.join(' ');
var date, spec;
var log = new TimeLog(cli.file);

if (cli.args[0].match(/^(stop|x|finish|done|break)$/)) {
  var reason = cli.args.slice(1);
  log.push({ 'break': reason, date: new Date() });
}

else if (date = DateParser(args)) {
  console.log("Showing results for", date);
}

else if (spec = SpecParser(args)) {
  log.push(extend(spec, { date: new Date() }));
}

else {
  console.error(""+cli._name+": invalid usage");
  console.error("try `"+cli._name+" --help` for more info");
  process.exit(26);
}
