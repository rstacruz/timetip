#!/usr/bin/env node
// vim:ft=javascript

var cli = require('commander');
var extend = require('util')._extend;

cli
  .version(require('../package').version)
  .option('-f, --file <path>', 'the data file [~/.timelogs]', '~/.timelogs')
  .on('--help', function() {
    console.log('  Usage:');
    console.log('');
    console.log('    '+cli._name+' [start] <project> [<task>]  # start working');
    console.log('    '+cli._name+' stop [<reason>]             # stop working');
    console.log('');
    console.log('    '+cli._name+' status                      # show current status');
    console.log('    '+cli._name+' summary                     # summarize log for all dates');
    console.log('');
    console.log('    '+cli._name+' <date>                      # show entries');
    console.log('    '+cli._name+' <date> - <date>             # show entries for date range');
    console.log('');
    console.log('');
    console.log('  Examples:');
    console.log('');
    console.log('    '+cli._name+' myproject                   # start working on "myproject"');
    console.log('    '+cli._name+' stop                        # stop tracking');
    console.log('    '+cli._name+' stop lunch break            # stop tracking and log the reason');
    console.log('    '+cli._name+' 2 days ago                  # show entries from 2 days ago');
  })
  .parse(process.argv);


if (cli.args.length === 0) {
  cli.outputHelp();
  process.exit(26);
}

var DateParser = require('../lib/date_parser');
var SpecParser = require('../lib/spec_parser');
var TimeLog = require('../lib/time_log');

var cmd  = cli.args[0];
var rest = cli.args.slice(1).join(' ');
var args = cli.args.join(' ');

var date, spec;
var log = new TimeLog(cli.file);

if (cmd.match(/^(stop|x)$/)) {
  var reason = cli.args.slice(1);
  log.push({
    type: 'break',
    reason: reason,
    date: new Date()
  }).save();
}

else if (cmd.match(/^(st|status)$/)) {
  console.log("showing last");
}

else if (cmd.match(/^(summary)$/)) {
  log.dates().forEach(function(date) {
    console.log(date);
  });
}

else if (cmd.match(/^(start)$/) && (spec = SpecParser(rest))) {
  log.push(extend(spec, { date: new Date() })).save();
}

else if (date = DateParser(args)) {
  console.log("Showing results for", date);
}

else if (spec = SpecParser(args)) {
  log.push(extend(spec, { date: new Date() })).save();
}

else {
  console.error(""+cli._name+": invalid usage");
  console.error("try `"+cli._name+" --help` for more info");
  process.exit(26);
}
